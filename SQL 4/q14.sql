CREATE TABLE STUDENT(
	ID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
	MATH INTEGER,
	PHYSICS INTEGER,
	CHEMISTRY INTEGER
);

INSERT INTO STUDENT(MATH, PHYSICS, CHEMISTRY) VALUES(100, 50, 50);
INSERT INTO STUDENT(MATH, PHYSICS, CHEMISTRY) VALUES(57, 32, 47);
INSERT INTO STUDENT(MATH, PHYSICS, CHEMISTRY) VALUES(88, 39, 41);
INSERT INTO STUDENT(MATH, PHYSICS, CHEMISTRY) VALUES(92, 44, 31);
INSERT INTO STUDENT(MATH, PHYSICS, CHEMISTRY) VALUES(17, 50, 50);
INSERT INTO STUDENT(MATH, PHYSICS, CHEMISTRY) VALUES(100, 8, 7);
INSERT INTO STUDENT(MATH, PHYSICS, CHEMISTRY) VALUES(77, 45, 45);
INSERT INTO STUDENT(MATH, PHYSICS, CHEMISTRY) VALUES(69, 36, 46);
INSERT INTO STUDENT(MATH, PHYSICS, CHEMISTRY) VALUES(81, 47, 40);
INSERT INTO STUDENT(MATH, PHYSICS, CHEMISTRY) VALUES(66, 36, 35);

-- 아래는 STUDENT 테이블에 대한 구조를 보여줍니다. 테이블을 수정하실 필요는 없습니다.
DESC STUDENT;

-- 학생들의 수학, 물리, 화학 점수의 총합 내림차순 기준으로 3개의 그룹으로 나누어 조회하는 쿼리를 작성하세요.
SELECT
    ID,                                       -- 학생 ID
    MATH,                                     -- 수학 점수
    PHYSICS,                                  -- 물리 점수
    CHEMISTRY,                                -- 화학 점수
    (MATH + PHYSICS + CHEMISTRY) AS SCORE_SUM, -- 수학, 물리, 화학 점수의 총합 (SCORE_SUM)
    NTILE(3) OVER (ORDER BY (MATH + PHYSICS + CHEMISTRY) DESC) AS NTILE_GROUP -- NTILE 함수를 이용한 3개 그룹 값
FROM
    STUDENT
ORDER BY
    ID ASC;                                   -- ID를 기준으로 오름차순 정렬